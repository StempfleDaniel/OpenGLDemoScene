#version 330 core

// Ouput data
out vec4 fragColor;

in vec3 fColor;
in vec3 fNormal;
in vec3 fCameraPos;
in vec3 fLightDir;
in vec4 fPosition;
uniform int shaderState;

void main()
{
	fragColor = vec4(fColor, 1.0);
	if(shaderState == 0)
		return;
	
	
	float dotProduct = dot(fNormal, fLightDir);
	vec3 lightedCol =fColor*dotProduct;
	
	fragColor = vec4(lightedCol, 1.0);

	if(shaderState == 1)
		return;

	vec3 cameraToFrag = vec3(fCameraPos.x - fPosition.x, fCameraPos.y - fPosition.y, fCameraPos.z - fPosition.z);
	vec3 cameraToFragN = normalize(cameraToFrag);
	
	float outlineDotProduct = dot(cameraToFragN, fNormal);
	vec3 outlineCol = vec3(0, 1, 1);

	
	fragColor = vec4((1-outlineDotProduct) * outlineCol + outlineDotProduct * lightedCol, 1.0);
	

}



